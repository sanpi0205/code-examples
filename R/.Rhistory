set.seed(1234)
data(iris)
?sample
sample(1:10,20)
sample(1:10,20,replace = T)
?formula
index = sample(1:2, nrow(iris), replace=T, prob=c(0.7,0.3))
attach(iris)
trainData = iris[index==1,]
testData = iris[index==2,]
library('party')
install.packages('rpart')
install.packages('party')
library('party')
myFormula = Species~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width
class(myFormula)
myFormula = Species~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width
iris_ctree = ctree(myFormula, data = trainData)
table(predict(iris_ctree), trainData$Species)
print(iris_ctree)
table(predict(iris_ctree), trainData$Species)
?table
zz = predict(iris_ctree)
zz
zz[1:100]
table(predict(iris_ctree), trainData$Species)
table( trainData$Species, predict(iris_ctree))
?ctree
plot(iris_ctree)
?rpart
library('rpart')
?rpart
iris_tree = rpart(myFormula, data = trainData)
predict(iris_tree)
prediction = predict(iris_tree, newdata = trainData, type = 'class')
prediction
table(prediction,  trainData$Species)
table(trainData$Species, prediction)
print(iris_tree)
plot(iris_tree)
print(iris_ctree)
plot(iris_ctree)
table(trainData$Species, predict(iris_ctree))
preMatrix = table(trainData$Species, predict(iris_ctree))
diag(preMatrix)
sum(diag(preMatrix))
1 - sum(diag(preMatrix)) / sum(preMatrix)
preMatrix = table(trainData$Species, prediction)
1 - sum(diag(preMatrix)) / sum(preMatrix)
